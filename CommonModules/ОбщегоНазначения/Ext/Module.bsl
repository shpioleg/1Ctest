


Функция НайтиПодключенныйСервисПоИДМУ(ИДМУ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодключенныеСервисы.Ссылка
	|ИЗ
	|	Справочник.ПодключенныеСервисы КАК ПодключенныеСервисы
	|ГДЕ
	|	ПодключенныеСервисы.ИдентификаторМобильногоУстройства = &ИдентификаторМобильногоУстройства");
	Запрос.УстановитьПараметр("ИдентификаторМобильногоУстройства", ИДМУ);
	Выборка = Запрос.Выполнить().Выбрать();
	ПодключенныйСервис = Справочники.ПодключенныеСервисы.ПустаяСсылка();
	Если Выборка.Следующий() Тогда
		ПодключенныйСервис = Выборка.Ссылка;
	КонецЕсли;
	Возврат ПодключенныйСервис;
КонецФункции

Функция ПолучитьПодключенныйСервисПоУмолчанию() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодключенныеСервисы.Ссылка КАК ПодключенныйСервис
	|ИЗ
	|	Справочник.ПодключенныеСервисы КАК ПодключенныеСервисы
	|ГДЕ
	|	ПодключенныеСервисы.ИспользоватьПоУмолчанию");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ПодключенныйСервис;
	КонецЕсли;
	Возврат Справочники.ПодключенныеСервисы.ПустаяСсылка();
КонецФункции

Функция ПолучитьПодобранныеМаркиВФорматеJSON (ЗаказНаПодборМарок = Неопределено) Экспорт
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено (ЗаказНаПодборМарок) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаНаПринудительнуюВыгрузкуЗаказа();
		Запрос.УстановитьПараметр("Ссылка",ЗаказНаПодборМарок);
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаНаВыгрузкуЗаказов();
	КонецЕсли;
	СтруктураЗаказы = Новый Структура("Заказы",Новый Массив);
	ВыборкаЗаказы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказы.Следующий() Цикл
		СтруктураЗаказ = Новый Структура("ЗаказСсылка,Марки",ВыборкаЗаказы.ДокументЗаказ,Новый Массив);
		ЗаменитьСсылкиНаУИД (СтруктураЗаказ,"ЗаказСсылка");
		СтруктураЗаказы.Заказы.Добавить(СтруктураЗаказ);		
		ВыборкаДетали = ВыборкаЗаказы.Выбрать();		
		Пока ВыборкаДетали.Следующий() Цикл
			СтруктураМарка = Новый Структура("НоменклатураСсылка,ХарактеристикаСсылка,GTIN,СерийныйНомер");
			ЗаполнитьЗначенияСвойств(СтруктураМарка,ВыборкаДетали);
			ЗаменитьСсылкиНаУИД (СтруктураМарка,"НоменклатураСсылка,ХарактеристикаСсылка");
			СтруктураЗаказ.Марки.Добавить(СтруктураМарка);		
		КонецЦикла;		
	КонецЦикла;
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON,СтруктураЗаказы);		
	Возврат ЗаписьJSON.Закрыть();	
	
КонецФункции

Процедура ЗаменитьСсылкиНаУИД (СтруктураДанных,ИменаКлючейСсылок)
	МассивКлючей = СтрРазделить(ИменаКлючейСсылок,",");
	Если НЕ МассивКлючей.Количество() Тогда
		Возврат;
	КонецЕсли;
	Для каждого эл из МассивКлючей Цикл
		Если СтруктураДанных.Свойство(эл) И ЗначениеЗаполнено(СтруктураДанных[эл]) Тогда
			СтруктураДанных[эл] = Строка(СтруктураДанных[эл].УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьТекстЗапросаНаПринудительнуюВыгрузкуЗаказа()
	Возврат	"ВЫБРАТЬ
	|	ЗаказНаПодборМарок.Ссылка
	|ПОМЕСТИТЬ ВТЗаказ
	|ИЗ
	|	Документ.ЗаказНаПодборМарок КАК ЗаказНаПодборМарок
	|ГДЕ
	|	ЗаказНаПодборМарок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаказ.Ссылка КАК ДокументЗаказ,
	|	ВЗ.Номенклатура КАК НоменклатураСсылка,
	|	ВЗ.Характеристика КАК ХарактеристикаСсылка,
	|	ВЗ.GTIN КАК GTIN,
	|	ВЗ.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	ВТЗаказ КАК ВТЗаказ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаказНаПодборМарокТовары.Ссылка КАК ДокументЗаказ,
	|			ЗаказНаПодборМарокТовары.Номенклатура КАК Номенклатура,
	|			ЗаказНаПодборМарокТовары.Характеристика КАК Характеристика,
	|			ЗаказНаПодборМарокПодобранныеМарки.GTIN КАК GTIN,
	|			ЗаказНаПодборМарокПодобранныеМарки.СерийныйНомер КАК СерийныйНомер
	|		ИЗ
	|			Документ.ЗаказНаПодборМарок.Товары КАК ЗаказНаПодборМарокТовары
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПодборМарок.ПодобранныеМарки КАК ЗаказНаПодборМарокПодобранныеМарки
	|				ПО ЗаказНаПодборМарокТовары.Ссылка = ЗаказНаПодборМарокПодобранныеМарки.Ссылка
	|				И ЗаказНаПодборМарокТовары.КлючСтроки = ЗаказНаПодборМарокПодобранныеМарки.КлючСтроки) ВЗ
	|		ПО ВТЗаказ.Ссылка = ВЗ.ДокументЗаказ
	|ИТОГИ
	|ПО
	|	ДокументЗаказ";
КонецФункции

Функция ПолучитьТекстЗапросаНаВыгрузкуЗаказов()
	Возврат	"ВЫБРАТЬ
	|	ВЗ.ДокументЗаказ КАК ДокументЗаказ,
	|	ВЗ.Номенклатура КАК НоменклатураСсылка,
	|	ВЗ.Характеристика КАК ХарактеристикаСсылка,
	|	ВЗ.GTIN КАК GTIN,
	|	ВЗ.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказНаПодборМарокТовары.Ссылка КАК ДокументЗаказ,
	|		ЗаказНаПодборМарокТовары.Номенклатура КАК Номенклатура,
	|		ЗаказНаПодборМарокТовары.Характеристика КАК Характеристика,
	|		ЗаказНаПодборМарокПодобранныеМарки.GTIN КАК GTIN,
	|		ЗаказНаПодборМарокПодобранныеМарки.СерийныйНомер КАК СерийныйНомер
	|	ИЗ
	|		Документ.ЗаказНаПодборМарок.Товары КАК ЗаказНаПодборМарокТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПодборМарок.ПодобранныеМарки КАК ЗаказНаПодборМарокПодобранныеМарки
	|			ПО ЗаказНаПодборМарокТовары.Ссылка = ЗаказНаПодборМарокПодобранныеМарки.Ссылка
	|			И ЗаказНаПодборМарокТовары.КлючСтроки = ЗаказНаПодборМарокПодобранныеМарки.КлючСтроки) ВЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыгруженныеЗаказы КАК РСВыгруженныеЗаказы
	|		ПО ВЗ.ДокументЗаказ = РСВыгруженныеЗаказы.Заказ
	|		И НЕ (РСВыгруженныеЗаказы.СтатусВыгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусВыгрузкиДокументов.Выгружен)
	|		ИЛИ РСВыгруженныеЗаказы.СтатусВыгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусВыгрузкиДокументов.ВыгруженПовторно))
	|ГДЕ
	|	РСВыгруженныеЗаказы.Заказ ЕСТЬ NULL
	|ИТОГИ
	|ПО
	|	ДокументЗаказ";
КонецФункции	