Функция ОтправитьЗапросКСервисуСервера (НастройкаПодключения,ПутьКСервису,ТекстЗапроса = "") Экспорт	
	Попытка    
		Если НастройкаПодключения.ИспользуетсяЗащищенноеСоединение Тогда
			ssl = Новый ЗащищенноеСоединениеOpenSSL();
		Иначе
			ssl = Неопределено;
		КонецЕсли;
		ПортСервера = НастройкаПодключения.ПортСервера;
		Если НЕ ЗначениеЗаполнено(ПортСервера) Тогда
			ПортСервера = 80;
		КонецЕсли;
	 	HTTPСоединение = Новый HTTPСоединение(НастройкаПодключения.АдресСервера,ПортСервера,НастройкаПодключения.Пользователь,НастройкаПодключения.ПарольПользователя,,0,ssl);
		 
        ЗаголовокHTTP = Новый Соответствие();
        ЗаголовокHTTP.Вставить("Accept", "*/*");
        HTTPЗапрос = Новый HTTPЗапрос(ПутьКСервису,ЗаголовокHTTP);
        HTTPЗапрос.УстановитьТелоИзСтроки(ТекстЗапроса);
        Если ТекстЗапроса = "" Тогда
        	HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
        Иначе
        	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
        КонецЕсли;
        HTTPСоединение = "";
    Исключение       
		Возврат Неопределено;
	КонецПопытки;
	Возврат HTTPОтвет;
КонецФункции

Процедура ВыполнитьЗапросКСервисуСервера (ПодключенныйСервис,ИмяСервиса,ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПодключенныйСервис.НастройкаПодключенияКСерверу) Тогда
		Сообщить ("Настройки подключения к серверу не заполнены.");
		Возврат;
	КонецЕсли;	
	НайденныеСтроки = ПодключенныйСервис.СервисыСервера.НайтиСтроки(Новый Структура("ИмяСервиса",ИмяСервиса));
	Если НЕ НайденныеСтроки.Количество() Тогда
		Сообщить ("Сервис " + ИмяСервиса + " недоступен.");
		Возврат;			
	КонецЕсли;
	ПутьКСервису = НайденныеСтроки[0].ПутьКСервису;
	ПутьКСервису = СтрЗаменить(ПутьКСервису,"{deviceid}",ПодключенныйСервис.ИдентификаторМобильногоУстройства);
	ТекстHTTPЗапроса = "";
	Если ИмяСервиса = "ЗагрузитьПодобранныеМарки" Тогда
		ТекстHTTPЗапроса = ОбщегоНазначения.ПолучитьПодобранныеМаркиВФорматеJSON(ДополнительныеПараметры);	
	КонецЕсли;
	HTTPОтвет = ОтправитьЗапросКСервисуСервера (ПодключенныйСервис.НастройкаПодключенияКСерверу,ПутьКСервису,ТекстHTTPЗапроса);	
	Если HTTPОтвет = Неопределено Тогда
		Сообщить ("Не удалось установить соединение с сервером.");
		Возврат;
	КонецЕсли;
	Если НЕ HTTPОтвет.КодСостояния = 200 Тогда
		ТекстОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
		Сообщить("HTTP сервис возвратил ошибку." + Символы.ПС +
		ТекстОтвета);
		Возврат;
	Иначе
		Сообщить("Запрос к HTTP сервису " + ИмяСервиса + " прошел успешно.");
	КонецЕсли;
	
	Если ИмяСервиса = "ПолучитьДокументы" Тогда
		МассивПолученныхДокументов = СформироватьДокументыИзJSON (HTTPОтвет.ПолучитьТелоКакСтроку());
		Если МассивПолученныхДокументов.Количество() Тогда
			ТекстСообщения = "Получены документы:" + Символы.ПС;
			Для каждого эл из МассивПолученныхДокументов Цикл
				ТекстСообщения = ТекстСообщения + ?(эл.ЭтоНовый,"НОВЫЙ","ОБНОВЛЕНИЕ") + ": " + эл.Номер + " от " + эл.Дата + Символы.ПС;		
			КонецЦикла;
		Иначе
			ТекстСообщения = "Новых документов нет.";	
		КонецЕсли;
		Сообщить (ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

Функция СформироватьДокументыИзJSON (ТекстОтвета)
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
	Данные = ПрочитатьJSON(ЧтениеJSON);
	МассивПолученныхДокументов = Новый Массив;
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		Если Данные.Свойство("Документы") Тогда
			Для каждого ДокРеализация из Данные.Документы Цикл
				ПолученныеДокументы = Новый Структура ("Номер,Дата,ЭтоНовый");
				МассивПолученныхДокументов.Добавить(ПолученныеДокументы);
				ПолученныеДокументы.Номер = ДокРеализация.Номер;			
				ПолученныеДокументы.Дата = Формат (XMLЗначение(Тип("Дата"),ДокРеализация.Дата),"ДФ=dd.MM.yyyy");
				ПолученныеДокументы.ЭтоНовый = Истина;
				
				ЗаказНаПодборМарокСсылка = Документы.ЗаказНаПодборМарок.ПолучитьСсылку(Новый УникальныйИдентификатор(ДокРеализация.ДокументСсылка));
				ЗаказНаПодборМарокОбъект = ЗаказНаПодборМарокСсылка.ПолучитьОбъект();
				Если ЗаказНаПодборМарокОбъект = Неопределено Тогда
					ЗаказНаПодборМарокОбъект = Документы.ЗаказНаПодборМарок.СоздатьДокумент();
					ЗаказНаПодборМарокОбъект.УстановитьСсылкуНового(ЗаказНаПодборМарокСсылка);					
				Иначе
					ПолученныеДокументы.ЭтоНовый = Ложь;
					Если ЗаказНаПодборМарокОбъект.НеОбновлятьССервера Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				ЗаказНаПодборМарокОбъект.Товары.Очистить();
				ЗаказНаПодборМарокОбъект.ПодобранныеМарки.Очистить();
				ЗаказНаПодборМарокОбъект.Номер = ДокРеализация.Номер;
				ЗаказНаПодборМарокОбъект.Дата = XMLЗначение(Тип("Дата"),ДокРеализация.Дата);
				ЗаказНаПодборМарокОбъект.НеОбновлятьССервера = Истина;
				Для каждого Товар из ДокРеализация.Товары Цикл
					нс = ЗаказНаПодборМарокОбъект.Товары.Добавить();
					нс.Количество = Товар.Количество;
					ЗаменитьУИДНаСсылки (Товар,"НоменклатураСсылка,ХарактеристикаСсылка");
					нс.Номенклатура = Товар.НоменклатураСсылка;
					нс.Характеристика = Товар.ХарактеристикаСсылка;
				КонецЦикла;
				ЗаказНаПодборМарокОбъект.Записать();
			КонецЦикла;
		КонецЕсли;
		Если Данные.Свойство("Штрихкоды") Тогда
			Для каждого Штрихкод из Данные.Штрихкоды Цикл
				НоменклатураСсылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Штрихкод.НоменклатураСсылка));
				ХарактеристикаСсылка = Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(Штрихкод.ХарактеристикаСсылка));
				МенеджерЗаписи = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.Штрихкод = Штрихкод.Штрихкод;
				МенеджерЗаписи.Номенклатура = НоменклатураСсылка;
				МенеджерЗаписи.Характеристика = ХарактеристикаСсылка;
				МенеджерЗаписи.Записать();			
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ЧтениеJSON.Закрыть();
	Возврат МассивПолученныхДокументов;
КонецФункции

&НаСервере
Процедура ЗаменитьУИДНаСсылки (СтруктураДанных,ИменаКлючейСсылок)
	МассивКлючей = СтрРазделить(ИменаКлючейСсылок,",");
	Если НЕ МассивКлючей.Количество() Тогда
		Возврат;
	КонецЕсли;
	Для каждого эл из МассивКлючей Цикл
		Если СтруктураДанных.Свойство(эл) И ЗначениеЗаполнено(СтруктураДанных[эл]) Тогда
			ВидСправочника = "";
			Наименование = "";
			Если эл = "НоменклатураСсылка" Тогда
				ВидСправочника = "Номенклатура";
				Наименование = СтруктураДанных.НоменклатураНаименование;
			ИначеЕсли эл = "ХарактеристикаСсылка" Тогда
				ВидСправочника = "ХарактеристикиНоменклатуры";
				Наименование = СтруктураДанных.ХарактеристикаНаименование;
			Иначе
				Продолжить;
			КонецЕсли;
			СправочникСсылка = Справочники[ВидСправочника].ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураДанных[эл]));
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				СправочникОбъект = Справочники[ВидСправочника].СоздатьЭлемент();
				СправочникОбъект.УстановитьСсылкуНового(СправочникСсылка);
			КонецЕсли;
			СправочникОбъект.Наименование = Наименование;
			СправочникОбъект.Записать();
			СтруктураДанных[эл] = СправочникСсылка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
